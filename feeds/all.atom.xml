<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Sully's Page</title><link href="https://msull.github.io/" rel="alternate"/><link href="https://msull.github.io/feeds/all.atom.xml" rel="self"/><id>https://msull.github.io/</id><updated>2025-08-16T09:45:00-07:00</updated><entry><title>DynamoDB with Automatic Blob Fields in S3</title><link href="https://msull.github.io/dynamodb-with-automatic-blob-fields-in-s3.html" rel="alternate"/><published>2025-08-16T09:45:00-07:00</published><updated>2025-08-16T09:45:00-07:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2025-08-16:/dynamodb-with-automatic-blob-fields-in-s3.html</id><summary type="html">&lt;p&gt;A pattern I like to use for data storage is to keep the metadata in DynamoDB and the larger content in S3, with links in
the DB item pointing to the corresponding S3 keys. This approach can give DynamoDB queries a huge boost in speed and
cost savings, since you …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A pattern I like to use for data storage is to keep the metadata in DynamoDB and the larger content in S3, with links in
the DB item pointing to the corresponding S3 keys. This approach can give DynamoDB queries a huge boost in speed and
cost savings, since you can process a lot more records at a time when you just need metadata and not the full content.&lt;/p&gt;
&lt;p&gt;The challenge, of course, is that it can be a bit of a hassle to set up, and until recently I hadn’t really worked out a
clean pattern I felt great about. What I’ve always wanted was to fully automate this—so that I could simply flag a field
on my resource class definition as a “blob,” and it would automatically be saved in S3 instead of in the DynamoDB item.&lt;/p&gt;
&lt;p&gt;Here’s what that looks like now:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;DemoVersionedResourceWithBlobs&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;DynamoDbVersionedResource&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;Test versioned resource with a &amp;quot;blob&amp;quot; field.&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;
    &lt;span class="n"&gt;metadata&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;dict&lt;/span&gt;
    &lt;span class="n"&gt;document_content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Optional&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;  &lt;span class="c1"&gt;# Blob field&lt;/span&gt;

    &lt;span class="n"&gt;resource_config&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;ClassVar&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ResourceConfig&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ResourceConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;compress_data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;False&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;max_versions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="n"&gt;blob_fields&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;document_content&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;BlobFieldConfig&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;compress&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;content_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;text/plain&amp;quot;&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With this setup I can query items without loading document_content, and then only fetch it on demand for specific items.&lt;/p&gt;
&lt;h2&gt;Building with AI&lt;/h2&gt;
&lt;p&gt;I’ve been working with Claude Code to add several features to my
personal &lt;a href="https://github.com/msull/simplesingletable"&gt;DynamoDB library&lt;/a&gt;, and yesterday I tackled this “blob fields”
feature. It’s just as awesome as I had always imagined it would be.&lt;/p&gt;
&lt;p&gt;I’ll start integrating it into my production code base next week and really put it through its paces, but early testing
and benchmarking look great. For my most frequent use cases, I think it’s going to be very effective-- particularly for
some of the daily compliance reporting data we pull, where we only care about a handful of fields most of the time but
still need to retain a big data dump per individual.&lt;/p&gt;
&lt;p&gt;One of the biggest benefits of working with Claude is that it’s helping me finally clear out a backlog of long-standing
feature requests in my library, things I never felt I had to time to work on. Now I just focus on design, testing, and
implications, while the AI handles most of the coding, and it has been a great accelerator.&lt;/p&gt;
&lt;h2&gt;Benchmark Results (2500 items)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/msull/simplesingletable/blob/main/tests/test_blob_storage_performance.py"&gt;Benchmark Script&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Metric&lt;/th&gt;
&lt;th&gt;1KB&lt;/th&gt;
&lt;th&gt;4KB&lt;/th&gt;
&lt;th&gt;16KB&lt;/th&gt;
&lt;th&gt;32KB&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Create Time w/o Blob (ms)&lt;/td&gt;
&lt;td&gt;9227&lt;/td&gt;
&lt;td&gt;8330&lt;/td&gt;
&lt;td&gt;8170&lt;/td&gt;
&lt;td&gt;8578&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Create Time w/ Blob (ms)&lt;/td&gt;
&lt;td&gt;14403&lt;/td&gt;
&lt;td&gt;14393&lt;/td&gt;
&lt;td&gt;14448&lt;/td&gt;
&lt;td&gt;15110&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Create Overhead&lt;/td&gt;
&lt;td&gt;56.1%&lt;/td&gt;
&lt;td&gt;72.8%&lt;/td&gt;
&lt;td&gt;76.8%&lt;/td&gt;
&lt;td&gt;76.1%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Query Time w/o Blob (ms)&lt;/td&gt;
&lt;td&gt;184&lt;/td&gt;
&lt;td&gt;280&lt;/td&gt;
&lt;td&gt;1527&lt;/td&gt;
&lt;td&gt;4100&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Query Time w/ Blob (ms)&lt;/td&gt;
&lt;td&gt;150&lt;/td&gt;
&lt;td&gt;124&lt;/td&gt;
&lt;td&gt;140&lt;/td&gt;
&lt;td&gt;139&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Query Time Savings&lt;/td&gt;
&lt;td&gt;18.5%&lt;/td&gt;
&lt;td&gt;55.8%&lt;/td&gt;
&lt;td&gt;90.8%&lt;/td&gt;
&lt;td&gt;96.6%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RCUs w/o Blob&lt;/td&gt;
&lt;td&gt;416&lt;/td&gt;
&lt;td&gt;1356&lt;/td&gt;
&lt;td&gt;5119&lt;/td&gt;
&lt;td&gt;10118&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RCUs w/ Blob&lt;/td&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;td&gt;103&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RCU Savings&lt;/td&gt;
&lt;td&gt;75.2%&lt;/td&gt;
&lt;td&gt;92.4%&lt;/td&gt;
&lt;td&gt;98.0%&lt;/td&gt;
&lt;td&gt;99.0%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;API Calls w/o Blob&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;11&lt;/td&gt;
&lt;td&gt;40&lt;/td&gt;
&lt;td&gt;79&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;API Calls w/ Blob&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="Blog"/><category term="Claude Code"/><category term="DynamoDB"/><category term="AWS"/><category term="python"/><category term="largelanguagemodels"/></entry><entry><title>Python Enum Reference</title><link href="https://msull.github.io/python-enum-reference.html" rel="alternate"/><published>2025-06-05T11:36:00-07:00</published><updated>2025-06-05T11:36:00-07:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2025-06-05:/python-enum-reference.html</id><summary type="html">&lt;p&gt;I am always forgetting the particulars of this, so here is a quick reminder.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;enum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Enum&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Enum&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;


&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bad&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;# Enumtesting.a&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Got error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;# Enumtesting …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I am always forgetting the particulars of this, so here is a quick reminder.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;enum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Enum&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;Enum&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;


&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;bad&amp;quot;&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;# Enumtesting.a&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;ValueError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Got error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;# Enumtesting.a&lt;/span&gt;
&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="ne"&gt;KeyError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Got error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;# Enumtesting.a&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;EnumTesting&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;  &lt;span class="c1"&gt;# Enumtesting.a&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="snippets"/><category term="python"/><category term="guides"/></entry><entry><title>Frozen Shoulder Recovery - Deep Research</title><link href="https://msull.github.io/frozen-shoulder-recovery-deep-research.html" rel="alternate"/><published>2025-03-20T10:00:00-07:00</published><updated>2025-03-20T10:00:00-07:00</updated><author><name>ChatGPT 4o</name></author><id>tag:msull.github.io,2025-03-20:/frozen-shoulder-recovery-deep-research.html</id><summary type="html">&lt;p&gt;Deep research on Frozen Shoulder by OpenAI's GPT 4.5&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;strong&gt;Introduction:&lt;/strong&gt;&lt;br&gt;
When my mother was recently diagnosed with frozen shoulder (adhesive capsulitis) instead of the rotator cuff tear we initially suspected, I wanted to understand the typical recovery outcomes, especially since she’ll be starting treatment with a steroid injection. I asked ChatGPT-4.5 to conduct &lt;strong&gt;deep research&lt;/strong&gt; on the subject, focusing on recovery timelines, the effectiveness of steroid injections, whether frozen shoulder fully resolves, and how it compares to a rotator cuff tear in terms of treatment complexity and prognosis. The following article is the result of that research.&lt;/p&gt;
&lt;hr&gt;
&lt;h1&gt;Recovery from Frozen Shoulder (Adhesive Capsulitis)&lt;/h1&gt;
&lt;p&gt;Frozen shoulder is a condition of shoulder pain and stiffness that typically follows a prolonged course of gradual onset and recovery. Treatment often starts conservatively, with steroid (corticosteroid) injections commonly used as a first step to reduce pain and inflammation. Below we outline expected recovery timelines for different approaches, the effectiveness of steroid injections, long-term outcomes, and a comparison to rotator cuff tear recovery.&lt;/p&gt;
&lt;h2&gt;Phases and Expected Recovery Timeline of Frozen Shoulder&lt;/h2&gt;
&lt;p&gt;(&lt;a href="https://www.cuh.nhs.uk/patient-information/frozen-shoulder/"&gt;Frozen shoulder | CUH&lt;/a&gt;) &lt;em&gt;Frozen shoulder usually goes through three stages over time. The graph above shows possible recovery trajectories: some people recover in ~6 months (curve A), others around 12 months (curve B), and some take 2 or more years (curve C) to fully “thaw” (&lt;a href="https://www.cuh.nhs.uk/patient-information/frozen-shoulder/#:~:text=Image%3A%20Graph%20of%20typical%20frozen,axis%20label%3A%20Time%20%28months"&gt;Frozen shoulder | CUH&lt;/a&gt;). The vertical axis represents relative shoulder stiffness/pain, and the horizontal axis is time in months. With appropriate treatment, the painful phase can be shortened and overall recovery may be faster, but patience is often required.&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;Frozen shoulder classically progresses through &lt;strong&gt;three phases&lt;/strong&gt; – a painful “freezing” stage, a stiff “frozen” stage, and a “thawing” (recovering) stage. Each phase has a typical duration range, though individual recovery times vary:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Freezing (Painful) Stage:&lt;/strong&gt; Gradual onset of shoulder pain with increasing stiffness. Lasts about &lt;em&gt;6 weeks up to 9 months&lt;/em&gt; (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=shoulder%20as%20having%20three%20stages%3A"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;). Pain (often worse at night) limits motion during this phase. Early treatment (e.g. anti-inflammatories, injection) is aimed at pain relief to maintain some mobility.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Frozen (Adhesive) Stage:&lt;/strong&gt; Pain may improve but the shoulder remains very stiff with limited range of motion. Typically lasts &lt;em&gt;around 4 to 9 months&lt;/em&gt; (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=,five%20to%2026%20month%20period"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;). Daily activities can be difficult during this stage. Focus of therapy is on gentle stretching and restoring motion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Thawing (Recovery) Stage:&lt;/strong&gt; Slow, gradual improvement in shoulder mobility. This stage can last &lt;em&gt;anywhere from about 5 months up to 24+ months&lt;/em&gt; (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=,five%20to%2026%20month%20period"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;). During thawing, pain continues to decrease and the shoulder range of motion steadily improves, often returning close to normal over time.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Overall timeline:&lt;/strong&gt; Without intervention, the total course of a frozen shoulder can range from under 1 year to about 2–3 years for full resolution (&lt;a href="https://orthoinfo.aaos.org/en/diseases--conditions/frozen-shoulder/#:~:text=the%20shoulder,becomes%20very%20hard%20to%20move"&gt;Frozen Shoulder - Adhesive Capsulitis - OrthoInfo - AAOS&lt;/a&gt;) (&lt;a href="https://www.cuh.nhs.uk/patient-information/frozen-shoulder/#:~:text=The%20graph%20shows%20the%20expected,curve%20C"&gt;Frozen shoulder | CUH&lt;/a&gt;). Many cases resolve in about 1 to 2 years, but it’s not unusual for some to take longer. It’s important to remember there is wide variation – some individuals recover much sooner, while others may have symptoms that persist beyond three years (especially if underlying conditions like diabetes are present). &lt;/p&gt;
&lt;h2&gt;Steroid Injections: Effectiveness for Pain Relief and Mobility&lt;/h2&gt;
&lt;p&gt;Corticosteroid injections into the shoulder joint are a common first-line treatment during the painful early stage of frozen shoulder. They are &lt;strong&gt;effective at reducing pain and can help restore some motion in the short term&lt;/strong&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Studies show that intra-articular steroid injections provide significant &lt;strong&gt;short-term pain relief&lt;/strong&gt;. For example, a meta-analysis found injections led to clearly reduced shoulder pain and improved range of motion by 4–6 weeks, with benefits still evident at 12 and even 24 weeks post-injection (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Results%3A%20%20Eight%20RCTs%20with,well%20as%20improved%20American%20Shoulder"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;) (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Conclusion%3A%20%20Intra,as%2024%20to%2026%20weeks"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;). Pain scores improved and patients had better ability to move the shoulder (increased flexion, abduction, and rotation) compared to no injection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rapid relief:&lt;/strong&gt; Patients often feel pain relief within a few days to a week after a steroid shot, and this can make it easier to participate in physical therapy exercises. The greatest benefit is usually seen in the first 3 months after the injection (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Results%3A%20%20Eight%20RCTs%20with,well%20as%20improved%20American%20Shoulder"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;) (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Conclusion%3A%20%20Intra,as%2024%20to%2026%20weeks"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;). By easing the pain in the “freezing” phase, the injection allows one to work on gentle movements sooner.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Duration of effect:&lt;/strong&gt; The pain-relieving effect of a steroid injection typically lasts several weeks to a few months. In many cases, improvement in pain and function is notable at 6 weeks and 3 months (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Results%3A%20%20Eight%20RCTs%20with,well%20as%20improved%20American%20Shoulder"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;). Some benefit may persist up to about 6 months, though by that time the initial effect can taper off (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=reduced%20VAS%20pain%20scores%20at,CI"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;) (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Conclusion%3A%20%20Intra,as%2024%20to%2026%20weeks"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;). (It’s possible for pain to recur as the injection wears off, and sometimes a repeat injection may be considered if needed, usually spaced by several weeks or months.)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Combining with therapy:&lt;/strong&gt; Steroid injections are often combined with &lt;strong&gt;physical therapy&lt;/strong&gt; for best results. The injection addresses inflammation and pain, while stretching and mobilization address the capsule tightness. Research indicates that a corticosteroid injection plus physiotherapy leads to better early improvement in shoulder function than therapy alone (&lt;a href="https://www.aafp.org/pubs/afp/issues/2019/0301/p297.html#:~:text=randomized%20controlled%20trials%20totaling%20453,13"&gt;Adhesive Capsulitis: Diagnosis and Management | AAFP&lt;/a&gt;). In other words, the shot can jump-start progress, but exercises are still crucial to regain motion.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Limitations:&lt;/strong&gt; While injections excel at short-term relief, the long-term outcome (at one year and beyond) is similar to other non-surgical measures in many cases (&lt;a href="https://www.aafp.org/pubs/afp/issues/2019/0301/p297.html#:~:text=corticosteroid%20injections%20have%20been%20compared,combined%2C%20physiotherapy%20and%20corticosteroid%20injections"&gt;Adhesive Capsulitis: Diagnosis and Management | AAFP&lt;/a&gt;). The injection doesn’t “cure” frozen shoulder overnight but rather reduces pain to facilitate the recovery process. It is one tool in management – patients will still need to continue with stretching exercises and time for the shoulder to loosen up.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;What to expect:&lt;/strong&gt; If a steroid injection is used as the first step, you can expect a decrease in pain within the first few weeks, making movements more tolerable. By about 4–6 weeks after the injection, many patients report significantly less night pain and modest increases in range of motion (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Results%3A%20%20Eight%20RCTs%20with,well%20as%20improved%20American%20Shoulder"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;). Continuing a home exercise program or formal physical therapy during this period is key to capitalizing on the reduced pain. By 3 months, you should see further improvements in mobility and function as the frozen shoulder moves into the stiffer but less painful phase. It’s important to keep up with stretching during this time to maximize motion gains. If progress plateaus or pain remains severe, discuss with your doctor – in some cases a second injection, hydrodilatation (capsular distension injection), or other treatments might be considered to move things along.&lt;/p&gt;
&lt;h2&gt;Do Frozen Shoulders Fully Resolve? (Long-Term Outlook)&lt;/h2&gt;
&lt;p&gt;Frozen shoulder is often described as self-limiting – meaning it eventually gets better on its own. &lt;strong&gt;The encouraging news is that the vast majority of patients improve substantially over time&lt;/strong&gt;, often regaining close to normal use of the shoulder. However, it’s possible to have some residual stiffness or loss of full range of motion even long after recovery:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Most patients recover most of their motion:&lt;/strong&gt; With adequate time and therapy, most people see their pain resolve and mobility improve to near-normal. One large study noted that over 90% of patients improved with simple non-surgical treatments (like injections and therapy) (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=or%20range%20of%20motion%20exercises,with%20these%20relatively%20simple%20treatments"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;). In general, given enough time, frozen shoulder &lt;em&gt;should&lt;/em&gt; substantially resolve for most individuals (&lt;a href="https://www.cuh.nhs.uk/patient-information/frozen-shoulder/#:~:text=The%20graph%20shows%20the%20expected,curve%20C"&gt;Frozen shoulder | CUH&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Possible residual stiffness:&lt;/strong&gt; Some research has challenged the old assumption that &lt;em&gt;everyone&lt;/em&gt; returns to 100% normal. For example, one long-term follow-up study found that after ~7 years, about 50% of patients still had slight shoulder pain or stiffness, though only 11% had any significant functional limitations from it (&lt;a href="https://ecios.org/DOIx.php?id=10.4055/cios.2019.11.3.249#:~:text=Traditionally%2C%20FS%20has%20been%20regarded,return%20to%20their%20own%20life"&gt;:: CIOS :: Clinics in Orthopedic Surgery&lt;/a&gt;). Another study with 5–10 year follow-up reported only 39% of patients achieved completely full range of motion recovery (&lt;a href="https://ecios.org/DOIx.php?id=10.4055/cios.2019.11.3.249#:~:text=stiffness%20of%20the%20shoulder%20at,return%20to%20their%20own%20life"&gt;:: CIOS :: Clinics in Orthopedic Surgery&lt;/a&gt;). &lt;strong&gt;In practical terms, this means some people may be left with minor restrictions&lt;/strong&gt; (for instance, difficulty reaching as far behind the back or fully overhead with the affected arm). &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Function usually returns:&lt;/strong&gt; Even if some stiffness remains, it often doesn’t cause major disability. In the majority of cases the residual loss of motion is mild and does not affect day-to-day activities (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=relatively%20simple%20treatments"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;). Patients often adapt, and strength is typically fully restored. It’s rare to have severe permanent loss of function from frozen shoulder.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Factors affecting recovery:&lt;/strong&gt; Certain factors (such as diabetes or thyroid disease) can make frozen shoulder more likely to linger or leave slight deficits. Diabetics, for example, tend to have more prolonged stiffness and may not regain motion as completely (&lt;a href="https://orthoinfo.aaos.org/en/diseases--conditions/frozen-shoulder/#:~:text=Diabetes,thawing"&gt;Frozen Shoulder - Adhesive Capsulitis - OrthoInfo - AAOS&lt;/a&gt;). Early intervention and adhering to therapy can help maximize the eventual recovery.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Bottom line:&lt;/strong&gt; &lt;em&gt;Expect&lt;/em&gt; that your frozen shoulder will get dramatically better with time – pain will subside and mobility will improve. But also understand that it may not happen quickly, and a small amount of tightness could potentially remain in extreme ranges of motion. Regular stretching even after the “thawing” phase can help ensure the best possible outcome. If significant stiffness persists well beyond the typical timeline, consult an orthopedic specialist about further options (in rare cases, procedures like manipulation under anesthesia or arthroscopic capsular release can be done to regain motion (&lt;a href="https://www.aafp.org/pubs/afp/issues/2019/0301/p297.html#:~:text=SURGICAL%20TREATMENT"&gt;Adhesive Capsulitis: Diagnosis and Management | AAFP&lt;/a&gt;), but these are usually last resorts).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Comparison: Frozen Shoulder vs. Rotator Cuff Tear (Treatment &amp;amp; Recovery)&lt;/h2&gt;
&lt;p&gt;Frozen shoulder and rotator cuff tears are two different shoulder problems that can both cause pain and limited movement, but they differ greatly in treatment complexity and recovery time:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Frozen Shoulder (Adhesive Capsulitis):&lt;/strong&gt; This is primarily a problem of inflammation and tightening in the joint capsule, not a structural tear. It is overwhelmingly managed with &lt;strong&gt;conservative treatments&lt;/strong&gt; – such as anti-inflammatory measures, steroid injections, and physical therapy to stretch the shoulder. &lt;strong&gt;Recovery timeline:&lt;/strong&gt; Frozen shoulder improves gradually over &lt;em&gt;months&lt;/em&gt; to a few &lt;em&gt;years&lt;/em&gt; (1 to 3 years is a typical full recovery span without surgery) (&lt;a href="https://orthoinfo.aaos.org/en/diseases--conditions/frozen-shoulder/#:~:text=the%20shoulder,becomes%20very%20hard%20to%20move"&gt;Frozen Shoulder - Adhesive Capsulitis - OrthoInfo - AAOS&lt;/a&gt;). It tends to resolve with time, and surgery is rarely needed (only considered if months of therapy and injections fail to provide relief) (&lt;a href="https://www.aafp.org/pubs/afp/issues/2019/0301/p297.html#:~:text=SURGICAL%20TREATMENT"&gt;Adhesive Capsulitis: Diagnosis and Management | AAFP&lt;/a&gt;). The key challenge is enduring the lengthy stiffness phase, but the condition usually &lt;strong&gt;gets better on its own&lt;/strong&gt; eventually. From a treatment standpoint, frozen shoulder requires patience and consistent rehab, but not the repair of any torn structures.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rotator Cuff Tear:&lt;/strong&gt; A rotator cuff tear is a tear in one of the tendons of the shoulder’s rotator cuff. This is a structural damage issue and often involves more complex treatment. Small or partial-thickness tears &lt;strong&gt;may be treated conservatively&lt;/strong&gt; with rest, physical therapy, and sometimes injections, and a good percentage of patients can improve pain and shoulder function without surgery (&lt;a href="https://my.clevelandclinic.org/health/diseases/8291-rotator-cuff-tear#:~:text=Rotator%20cuff%20tears%20don%E2%80%99t%20heal,for%20the%20condition%20to%20improve"&gt;Rotator Cuff Tear: Symptoms &amp;amp; Treatment&lt;/a&gt;). However, &lt;strong&gt;full-thickness or large rotator cuff tears&lt;/strong&gt; frequently require &lt;strong&gt;surgical repair&lt;/strong&gt; to reattach the torn tendon, especially in active individuals or those who have significant weakness (&lt;a href="https://my.clevelandclinic.org/health/diseases/8291-rotator-cuff-tear#:~:text=Rotator%20cuff%20tears%20don%E2%80%99t%20heal,for%20the%20condition%20to%20improve"&gt;Rotator Cuff Tear: Symptoms &amp;amp; Treatment&lt;/a&gt;) (&lt;a href="https://my.clevelandclinic.org/health/diseases/8291-rotator-cuff-tear#:~:text=Your%20healthcare%20provider%20may%20recommend,athletic%20interests%20affect%20your%20shoulder"&gt;Rotator Cuff Tear: Symptoms &amp;amp; Treatment&lt;/a&gt;). Surgical treatment is typically arthroscopic (outpatient) but the rehabilitation afterward is extensive. &lt;strong&gt;Recovery timeline:&lt;/strong&gt; After rotator cuff &lt;strong&gt;surgery&lt;/strong&gt;, the arm is kept in a sling for about 4–6 weeks, and physical therapy is needed for several months. Most people regain substantial use of the shoulder by about 4–6 months post-op, but full recovery of strength and mobility can take &lt;em&gt;up to 12–18 months&lt;/em&gt; after the surgery (&lt;a href="https://my.clevelandclinic.org/health/diseases/8291-rotator-cuff-tear#:~:text=,cuff%20tear%20recovery%20time"&gt;Rotator Cuff Tear: Symptoms &amp;amp; Treatment&lt;/a&gt;). Even with non-surgical management of a rotator cuff tear, improvements generally occur over &lt;em&gt;weeks to months&lt;/em&gt; rather than years – for example, strength and function might return over 3–6 months of targeted exercises (if successful). In summary, a rotator cuff tear often has a &lt;strong&gt;shorter overall timeline for recovery&lt;/strong&gt; (on the order of months) &lt;em&gt;if&lt;/em&gt; appropriately treated, but that recovery may involve major interventions like surgery and a rigorous rehab program. This makes the treatment course more complex and intensive than that of a frozen shoulder.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;In essence:&lt;/strong&gt; Frozen shoulder is typically a slower, more drawn-out ordeal but usually simpler in that it rarely needs an operation – it’s about managing pain and waiting for the body to resolve the capsular tightness. Rotator cuff tears, on the other hand, can often be fixed within a year or less, but they may demand surgical repair and structured rehab, making the process more involved. If you are comparing the two, expect that a frozen shoulder will test your patience but likely get better with conservative care, whereas a rotator cuff tear might be “fixed” sooner but at the cost of a possible surgery and a strict recovery protocol.&lt;/p&gt;
&lt;h2&gt;What to Expect at Different Stages of Recovery&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Early weeks (0–6 weeks):&lt;/strong&gt; If you’ve just started treatment (for example, had a steroid injection and begun exercises), the main goal in the first few weeks is pain control. During this period, you should notice pain gradually decreasing – night pain and constant aching should improve. You might start to see slight increases in how far you can move your arm, especially with therapy assistance. It’s normal that range of motion is still quite limited in this stage, but you’re setting the stage for improvement. Continue gentle stretches as advised; pushing too hard can aggravate pain, so find the right balance with your therapist. &lt;em&gt;(Note: After a rotator cuff surgery (if that were the case), the first 6 weeks would involve immobilization in a sling and very limited motion, which is a big difference in early-stage management compared to frozen shoulder.)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6 weeks to 3 months:&lt;/strong&gt; You’ll likely transition from the painful “freezing” phase into the less painful but stiff “frozen” phase sometime in this window. Pain is noticeably better than before, often allowing you to reduce pain medication. Sleep is usually improving now. However, you may feel frustrated by persistent stiffness – overhead movement and reaching behind your back are still difficult. During this stage, &lt;strong&gt;physical therapy&lt;/strong&gt; intensity often increases (if pain allows) to work on stretching the joint capsule. Expect slow gains: for example, every few weeks you might raise your arm a bit higher or rotate it a bit further. By around 3 months, many patients have made measurable improvements in motion, though not fully normal yet (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Results%3A%20%20Eight%20RCTs%20with,well%20as%20improved%20American%20Shoulder"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;). If progress is minimal by 3–4 months, doctors might consider additional interventions (a repeat steroid injection or a hydrodilatation procedure to stretch the capsule) to help spur improvement (&lt;a href="https://www.aafp.org/pubs/afp/issues/2019/0301/p297.html#:~:text=Hydrodilatation%20,greatest%20benefit%20experienced%20within%20the"&gt;Adhesive Capsulitis: Diagnosis and Management | AAFP&lt;/a&gt;) (&lt;a href="https://www.aafp.org/pubs/afp/issues/2019/0301/p297.html#:~:text=concluded%20the%20combination%20of%20hydrodilatation,17"&gt;Adhesive Capsulitis: Diagnosis and Management | AAFP&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3 to 6 months:&lt;/strong&gt; This period often marks the transition into the “thawing” (recovering) phase for many people. You should be experiencing significantly less pain at this point – typically pain is only intermittent or with extreme movements, rather than constant. Stiffness remains the main issue, but you’ll notice that your range of motion is improving month by month. Activities like dressing, grooming, and reaching overhead become easier than before. Keep up with your home exercise program; consistent stretching and strengthening will help speed up the thawing. Most patients at 6 months post-treatment have much better function – you may not be 100% yet, but you can do most daily activities with only mild limitations. If there was a rotator cuff repair instead, around 6 months is when many people are regaining near full use of the arm in daily life (&lt;a href="https://my.clevelandclinic.org/health/diseases/8291-rotator-cuff-tear#:~:text=After%20surgery%2C%20you%20need%20to,to%2012%20to%2018%20months"&gt;Rotator Cuff Tear: Symptoms &amp;amp; Treatment&lt;/a&gt;), though heavy lifting or sports might still be limited until later.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6 months to 1 year:&lt;/strong&gt; The majority of frozen shoulder sufferers are well into the thawing phase by this point. You should have made substantial gains in flexibility. Perhaps you still lack the last few degrees of movement (for example, reaching the highest shelf or fastening a bra might be a bit tight), but you’re mostly functional. Pain is usually minimal to none at rest. Stiffness can still flare if you overdo it, but overall it’s on a downward trend. By 12 months, many patients have &lt;strong&gt;near-normal shoulder function&lt;/strong&gt; or at least a marked improvement from where they started (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=or%20range%20of%20motion%20exercises,with%20these%20relatively%20simple%20treatments"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;). Any remaining motion deficits can often be compensated by adjusting how you move (using your scapula or trunk more, for instance). At this stage, if you still have significant restriction, an orthopedic consultation is warranted to consider options like manipulation under anesthesia or arthroscopic release to physically break up adhesions – but this is only if you’ve plateaued and the stiffness is truly impeding your life. It’s important to note that some patients simply need a bit longer; not everyone’s shoulder will thaw completely by 1 year.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Beyond 1 year:&lt;/strong&gt; If your frozen shoulder has largely resolved by now, you might just continue periodic stretching and normal use to maintain flexibility. In cases that take 2 or more years, the improvement is usually gradual – for example, at 18 months you might finally notice you can reach behind your back again without help, or that your overhead reach is almost equal to the other side. It’s not uncommon for &lt;strong&gt;small deficits to persist&lt;/strong&gt; (e.g. a mild loss of rotation or slight tightness at the end ranges). Even several years out, a few patients will report a bit of lingering shoulder tightness (&lt;a href="https://ecios.org/DOIx.php?id=10.4055/cios.2019.11.3.249#:~:text=complete%20recovery%20of%20pain%20and,return%20to%20their%20own%20life"&gt;:: CIOS :: Clinics in Orthopedic Surgery&lt;/a&gt;). The good news is that for most, this does not cause pain or functional problems (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=relatively%20simple%20treatments"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;). Essentially, you’ve got your shoulder back for normal purposes, even if it’s not quite as supple as the other side. At this point, you should be back to doing whatever activities you enjoy, though always listen to your body – maintaining flexibility and strength through regular exercise can help prevent future issues.&lt;/p&gt;
&lt;p&gt;Remember that everyone’s healing timeline is different. It’s okay if your recovery doesn’t fit neatly into these time frames – some people improve faster, and others slower. The key is the overall trend of progress. If at any point you feel like you’re going backwards – for instance, new pain developing or losing motion again – let your healthcare provider know. They may check for other issues or adjust your treatment plan. But in general, with frozen shoulder, the passage of time is working in your favor. Stay diligent with your exercises, keep your pain managed, and maintain hope that each stage will bring you closer to a fully functional shoulder. &lt;strong&gt;Patience is crucial&lt;/strong&gt;, but the outcome is usually positive: most people are able to get back to a life &lt;strong&gt;without shoulder pain and with functional range of motion&lt;/strong&gt; after the journey through a frozen shoulder.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Sources:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Ramkumar, P. N., et al. &lt;em&gt;“Adhesive Capsulitis: Diagnosis and Management.”&lt;/em&gt; American Family Physician vol. 99, no. 5 (2019): 297-300 (&lt;a href="https://www.aafp.org/pubs/afp/issues/2019/0301/p297.html#:~:text=imaging%20yields%20high%20specificity%20for,injections%20combined%20may%20provide%20greater"&gt;Adhesive Capsulitis: Diagnosis and Management | AAFP&lt;/a&gt;) (&lt;a href="https://www.aafp.org/pubs/afp/issues/2019/0301/p297.html#:~:text=Traditionally%2C%20the%20natural%20history%20of,most%20improvement%20in%20pain%20and"&gt;Adhesive Capsulitis: Diagnosis and Management | AAFP&lt;/a&gt;).  &lt;/li&gt;
&lt;li&gt;Sun, Y., et al. &lt;em&gt;“Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-Analysis of Randomized Controlled Trials.”&lt;/em&gt; Am J Sports Med vol. 45, no. 9 (2017): 2171-2179 (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Results%3A%20%20Eight%20RCTs%20with,well%20as%20improved%20American%20Shoulder"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;) (&lt;a href="https://pubmed.ncbi.nlm.nih.gov/28298050/#:~:text=Conclusion%3A%20%20Intra,as%2024%20to%2026%20weeks"&gt;Intra-articular Steroid Injection for Frozen Shoulder: A Systematic Review and Meta-analysis of Randomized Controlled Trials With Trial Sequential Analysis - PubMed&lt;/a&gt;).  &lt;/li&gt;
&lt;li&gt;UConn Musculoskeletal Institute – Frozen Shoulder Patient Education (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=shoulder%20as%20having%20three%20stages%3A"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;) (&lt;a href="https://health.uconn.edu/orthopedics-sports-medicine/conditions-and-treatments/where-does-it-hurt/shoulder/frozen-shoulder/#:~:text=or%20range%20of%20motion%20exercises,with%20these%20relatively%20simple%20treatments"&gt;Frozen Shoulder | Orthopedics &amp;amp; Sports Medicine&lt;/a&gt;).  &lt;/li&gt;
&lt;li&gt;Cambridge Univ. Hospitals (NHS) – Frozen Shoulder Info (2024) (&lt;a href="https://www.cuh.nhs.uk/patient-information/frozen-shoulder/#:~:text=Image%3A%20Graph%20of%20typical%20frozen,axis%20label%3A%20Time%20%28months"&gt;Frozen shoulder | CUH&lt;/a&gt;) (&lt;a href="https://www.cuh.nhs.uk/patient-information/frozen-shoulder/#:~:text=The%20graph%20shows%20the%20expected,curve%20C"&gt;Frozen shoulder | CUH&lt;/a&gt;).  &lt;/li&gt;
&lt;li&gt;Cleveland Clinic – &lt;em&gt;Rotator Cuff Tear: Symptoms &amp;amp; Treatment&lt;/em&gt; (2023) (&lt;a href="https://my.clevelandclinic.org/health/diseases/8291-rotator-cuff-tear#:~:text=,cuff%20tear%20recovery%20time"&gt;Rotator Cuff Tear: Symptoms &amp;amp; Treatment&lt;/a&gt;) (&lt;a href="https://my.clevelandclinic.org/health/diseases/8291-rotator-cuff-tear#:~:text=Rotator%20cuff%20tears%20don%E2%80%99t%20heal,for%20the%20condition%20to%20improve"&gt;Rotator Cuff Tear: Symptoms &amp;amp; Treatment&lt;/a&gt;).  &lt;/li&gt;
&lt;li&gt;Kim, D. H., et al. &lt;em&gt;“Treatment Strategy for Frozen Shoulder.”&lt;/em&gt; Clin Orthop Surg vol. 11, no. 3 (2019): 249-257 (&lt;a href="https://ecios.org/DOIx.php?id=10.4055/cios.2019.11.3.249#:~:text=Traditionally%2C%20FS%20has%20been%20regarded,return%20to%20their%20own%20life"&gt;:: CIOS :: Clinics in Orthopedic Surgery&lt;/a&gt;) (&lt;a href="https://ecios.org/DOIx.php?id=10.4055/cios.2019.11.3.249#:~:text=managements%20may%20be%20successful%20in,and%20muscular%20inhibition%20result%20in"&gt;:: CIOS :: Clinics in Orthopedic Surgery&lt;/a&gt;).&lt;/li&gt;
&lt;/ol&gt;</content><category term="Blog"/><category term="largelanguagemodels"/><category term="deepresearch"/></entry><entry><title>EditGuru - Sample Outputs #2</title><link href="https://msull.github.io/editguru-sample-outputs-2.html" rel="alternate"/><published>2025-03-14T09:53:00-07:00</published><updated>2025-03-14T09:53:00-07:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2025-03-14:/editguru-sample-outputs-2.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;❯&lt;span class="w"&gt; &lt;/span&gt;eg&lt;span class="w"&gt; &lt;/span&gt;--model&lt;span class="w"&gt; &lt;/span&gt;anthropic.claude-3-5-sonnet-20241022-v2:0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;examine the python files in this directory and then write a small markdown file named &amp;quot;notes.md&amp;quot; that briefly covers the purpose of each module, along with an overall summary. slackbot.py is the main file to start with.&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--use-cwd&lt;span class="w"&gt;  &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;--max-cost&lt;span class="w"&gt; &lt;/span&gt;.25
Task:&lt;span class="w"&gt; &lt;/span&gt;examine …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;❯&lt;span class="w"&gt; &lt;/span&gt;eg&lt;span class="w"&gt; &lt;/span&gt;--model&lt;span class="w"&gt; &lt;/span&gt;anthropic.claude-3-5-sonnet-20241022-v2:0&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;examine the python files in this directory and then write a small markdown file named &amp;quot;notes.md&amp;quot; that briefly covers the purpose of each module, along with an overall summary. slackbot.py is the main file to start with.&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--use-cwd&lt;span class="w"&gt;  &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;--max-cost&lt;span class="w"&gt; &lt;/span&gt;.25
Task:&lt;span class="w"&gt; &lt;/span&gt;examine&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;files&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;directory&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;write&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;small&lt;span class="w"&gt; &lt;/span&gt;markdown&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;named&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;notes.md&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;that&lt;span class="w"&gt; &lt;/span&gt;briefly&lt;span class="w"&gt; &lt;/span&gt;covers&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;purpose&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;each&lt;span class="w"&gt; &lt;/span&gt;module,&lt;span class="w"&gt; &lt;/span&gt;along
with&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;overall&lt;span class="w"&gt; &lt;/span&gt;summary.&lt;span class="w"&gt; &lt;/span&gt;slackbot.py&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;main&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;start&lt;span class="w"&gt; &lt;/span&gt;with.
Generating&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;plan&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;accomplish&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;task...
I&lt;span class="s1"&gt;&amp;#39;ll outline a plan to analyze the Python files and create documentation:&lt;/span&gt;

&lt;span class="s1"&gt; 1 First, use ListFiles to get all Python files in directory&lt;/span&gt;
&lt;span class="s1"&gt;    • Set recursive=true to catch any in subdirectories&lt;/span&gt;
&lt;span class="s1"&gt; 2 Start with slackbot.py:&lt;/span&gt;
&lt;span class="s1"&gt;    • Use ReadFile to examine its contents&lt;/span&gt;
&lt;span class="s1"&gt;    • Note its main purpose and key functionality&lt;/span&gt;
&lt;span class="s1"&gt; 3 Examine each additional Python file found:&lt;/span&gt;
&lt;span class="s1"&gt;    • Use ReadFile for each one&lt;/span&gt;
&lt;span class="s1"&gt;    • Note their purposes and relationships to slackbot.py&lt;/span&gt;
&lt;span class="s1"&gt;    • Keep track of key points for each module&lt;/span&gt;
&lt;span class="s1"&gt; 4 Create notes.md:&lt;/span&gt;
&lt;span class="s1"&gt;    • Use WriteFile to create a new markdown file&lt;/span&gt;
&lt;span class="s1"&gt;    • Structure will include:&lt;/span&gt;
&lt;span class="s1"&gt;       • Brief overview section&lt;/span&gt;
&lt;span class="s1"&gt;       • Section for each module with purpose/role&lt;/span&gt;
&lt;span class="s1"&gt;       • Dependencies between modules if relevant&lt;/span&gt;

&lt;span class="s1"&gt;Would you like me to proceed with this plan?&lt;/span&gt;

&lt;span class="s1"&gt;────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────&lt;/span&gt;
&lt;span class="s1"&gt;I have completed the task of examining the Python files and creating a documentation overview. The notes.md file has been created with a comprehensive summary&lt;/span&gt;
&lt;span class="s1"&gt;of the project structure, including:&lt;/span&gt;

&lt;span class="s1"&gt; 1 A high-level overview of the Slackbot project&lt;/span&gt;
&lt;span class="s1"&gt; 2 Detailed descriptions of each core module:&lt;/span&gt;
&lt;span class="s1"&gt;    • slackbot.py (main entry point and event handling)&lt;/span&gt;
&lt;span class="s1"&gt;    • agent.py (AI agent functionality)&lt;/span&gt;
&lt;span class="s1"&gt;    • api_helper.py (dataroomHQ API integration)&lt;/span&gt;
&lt;span class="s1"&gt;    • tools.py (custom AI agent tools)&lt;/span&gt;
&lt;span class="s1"&gt;    • utils.py (utility functions)&lt;/span&gt;
&lt;span class="s1"&gt; 3 Key features of the system&lt;/span&gt;
&lt;span class="s1"&gt; 4 Integration points with external services&lt;/span&gt;

&lt;span class="s1"&gt;The documentation provides a clear picture of how the different components work together to create a Slack bot that interfaces with dataroomHQ&amp;#39;&lt;/span&gt;s&lt;span class="w"&gt; &lt;/span&gt;platform,
handles&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;interactions,&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;provides&lt;span class="w"&gt; &lt;/span&gt;data&lt;span class="w"&gt; &lt;/span&gt;analysis&lt;span class="w"&gt; &lt;/span&gt;capabilities.

Would&lt;span class="w"&gt; &lt;/span&gt;you&lt;span class="w"&gt; &lt;/span&gt;like&lt;span class="w"&gt; &lt;/span&gt;me&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;make&lt;span class="w"&gt; &lt;/span&gt;any&lt;span class="w"&gt; &lt;/span&gt;adjustments&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;documentation&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;provide&lt;span class="w"&gt; &lt;/span&gt;additional&lt;span class="w"&gt; &lt;/span&gt;details&lt;span class="w"&gt; &lt;/span&gt;about&lt;span class="w"&gt; &lt;/span&gt;specific&lt;span class="w"&gt; &lt;/span&gt;components?
Final&lt;span class="w"&gt; &lt;/span&gt;Completion&lt;span class="w"&gt; &lt;/span&gt;Input&lt;span class="w"&gt; &lt;/span&gt;Tokens:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;17627&lt;/span&gt;
Final&lt;span class="w"&gt; &lt;/span&gt;Completion&lt;span class="w"&gt; &lt;/span&gt;Cost:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.056
Total&lt;span class="w"&gt; &lt;/span&gt;Completions&lt;span class="w"&gt; &lt;/span&gt;Made:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;7&lt;/span&gt;
Total&lt;span class="w"&gt; &lt;/span&gt;Completions&lt;span class="w"&gt; &lt;/span&gt;Cost:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.2472
Respond&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;llm&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;blank&lt;span class="w"&gt; &lt;/span&gt;line&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;quit&lt;span class="o"&gt;)&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Snippets"/><category term="EditGuru"/></entry><entry><title>Python Format String Specifiers - A Quick Reference Guide</title><link href="https://msull.github.io/python-format-string-specifiers-a-quick-reference-guide.html" rel="alternate"/><published>2025-03-12T12:00:00-07:00</published><updated>2025-03-12T12:00:00-07:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2025-03-12:/python-format-string-specifiers-a-quick-reference-guide.html</id><summary type="html">&lt;h1&gt;Python Format String Specifiers: A Quick Reference Guide&lt;/h1&gt;
&lt;p&gt;Python provides multiple ways to format strings, with the most common methods being &lt;strong&gt;f-strings&lt;/strong&gt; (&lt;code&gt;f""&lt;/code&gt;) and
the &lt;code&gt;.format()&lt;/code&gt; method.&lt;/p&gt;
&lt;h2&gt;1. Floating-Point Numbers&lt;/h2&gt;
&lt;h3&gt;Limit to 2 decimal places&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;12.34567&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.2f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 12.35&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{:.2f}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;# 12.35 …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;Python Format String Specifiers: A Quick Reference Guide&lt;/h1&gt;
&lt;p&gt;Python provides multiple ways to format strings, with the most common methods being &lt;strong&gt;f-strings&lt;/strong&gt; (&lt;code&gt;f""&lt;/code&gt;) and
the &lt;code&gt;.format()&lt;/code&gt; method.&lt;/p&gt;
&lt;h2&gt;1. Floating-Point Numbers&lt;/h2&gt;
&lt;h3&gt;Limit to 2 decimal places&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;12.34567&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.2f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 12.35&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{:.2f}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;format&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;  &lt;span class="c1"&gt;# 12.35&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Fixed width with padding (10 chars, right-aligned)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;10.2f&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;#39;     12.35&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Scientific notation&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.2e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 1.23e+01&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;2. Integers&lt;/h2&gt;
&lt;h3&gt;Basic integer formatting&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;42&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;d&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 42&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Padding with spaces (width 5, right-aligned)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;5d&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;#39;   42&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Padding with zeros (width 5, left-padded with zeros)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;05d&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;#39;00042&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Binary, Octal, Hex representations&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;b&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Binary: 101010&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;o&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Octal: 52&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Hex lowercase: 2a&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;X&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# Hex uppercase: 2A&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;3. Strings&lt;/h2&gt;
&lt;h3&gt;Fixed width with alignment&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hi&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;10&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;#39;Hi        &amp;#39; (right-aligned)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;&amp;lt;10&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;#39;Hi        &amp;#39; (left-aligned)&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;^10&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# &amp;#39;    Hi    &amp;#39; (center-aligned)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;4. Percentages&lt;/h2&gt;
&lt;h3&gt;Convert to percentage (multiplies by 100 and adds % sign)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;fraction&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;0.1234&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;fraction&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;.2%&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 12.34%&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;5. Thousand Separator&lt;/h2&gt;
&lt;h3&gt;Use commas to format large numbers&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;big_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1234567890&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;big_num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;,&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 1,234,567,890&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;For European-style separators (dot instead of comma)&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;big_num&lt;/span&gt;&lt;span class="si"&gt;:&lt;/span&gt;&lt;span class="s2"&gt;_&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# 1_234_567_890&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Format Specifiers Cheat Sheet&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Specifier&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:.2f&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;3.1415 → 3.14&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;2 decimal places&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:5d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42 → '   42'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Right-align integer in 5 spaces&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:05d&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42 → '00042'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Zero-padding for width 5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:.2e&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;12345 → 1.23e+04&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Scientific notation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:b&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42 → '101010'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Binary representation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:o&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42 → '52'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Octal representation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:x&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42 → '2a'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Hex lowercase&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:X&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;42 → '2A'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Hex uppercase&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:^10&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"Hi" → '    Hi    '&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Center align&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:&amp;lt;10&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"Hi" → 'Hi        '&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Left align&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:&amp;gt;10&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;"Hi" → '        Hi'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Right align&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:,&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;1234567 → '1,234,567'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Thousands separator&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;:.2%&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;0.1234 → '12.34%'&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Convert to percentage&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="snippets"/><category term="python"/><category term="guides"/></entry><entry><title>EditGuru - Sample Outputs</title><link href="https://msull.github.io/editguru-sample-outputs.html" rel="alternate"/><published>2025-02-25T10:40:00-08:00</published><updated>2025-02-25T10:40:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2025-02-25:/editguru-sample-outputs.html</id><summary type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;eg&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;examine this repo and then write a readme for this repo&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--max-cost&lt;span class="w"&gt; &lt;/span&gt;.25&lt;span class="w"&gt; &lt;/span&gt;--model&lt;span class="w"&gt; &lt;/span&gt;anthropic.claude-3-5-sonnet-20241022-v2:0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Planning log:&lt;/h2&gt;
&lt;div class="ai-conversation"&gt;
    &lt;div class="message user"&gt;
        &lt;div class="role"&gt;USER&lt;/div&gt;
        &lt;div class="content"&gt;In this environment, you have access to tools to achieve your goal.&lt;br&gt;&lt;br&gt;Use a tool by embedding the appropriate tag and JSON:&lt;br&gt;&lt;br&gt;&amp;lt;tool&amp;gt;&lt;br&gt;{&lt;br&gt;&amp;nbsp;&amp;nbsp;"name": "$TOOL_NAME",&lt;br&gt;&amp;nbsp;&amp;nbsp;"reason": "short explanation of …&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;eg&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;examine this repo and then write a readme for this repo&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--max-cost&lt;span class="w"&gt; &lt;/span&gt;.25&lt;span class="w"&gt; &lt;/span&gt;--model&lt;span class="w"&gt; &lt;/span&gt;anthropic.claude-3-5-sonnet-20241022-v2:0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Planning log:&lt;/h2&gt;
&lt;div class="ai-conversation"&gt;
    &lt;div class="message user"&gt;
        &lt;div class="role"&gt;USER&lt;/div&gt;
        &lt;div class="content"&gt;In this environment, you have access to tools to achieve your goal.&lt;br&gt;&lt;br&gt;Use a tool by embedding the appropriate tag and JSON:&lt;br&gt;&lt;br&gt;&amp;lt;tool&amp;gt;&lt;br&gt;{&lt;br&gt;&amp;nbsp;&amp;nbsp;"name": "$TOOL_NAME",&lt;br&gt;&amp;nbsp;&amp;nbsp;"reason": "short explanation of why you are using the tool (e.g., 'Getting upcoming events', 'Hiding date columns')",&lt;br&gt;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"$PARAMETER_NAME": "$PARAMETER_VALUE"&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;br&gt;&amp;lt;/tool&amp;gt;&lt;br&gt;&lt;br&gt;- **Must** include the wrapper tag around the JSON.&lt;br&gt;- **May** include a short message before tool usage but **may not** add content after.&lt;br&gt;- You can call multiple tools in parallel by including multiple `&amp;lt;tool&amp;gt;` blocks.&lt;br&gt;- You can use additional tools after receiving results (e.g., look up an ID before another operation).&lt;br&gt;- Use your first response to plan how you will accomplish the task (including any branching logic and multiple steps), then proceed.&lt;br&gt;&lt;br&gt;Available tools:&lt;br&gt;&lt;br&gt;&amp;lt;available_tools&amp;gt;&lt;br&gt;[&lt;br&gt;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"name": "ListFiles",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"recursive": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"default": false,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Set to True to list files recursively; be careful with this option if there may be lots of files, as it can overwhelm your system",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "boolean"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"anyOf": [&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "null"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"default": null,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Sub-path within the repository to list files from."&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"name": "ReadFile",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"file_path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Path to the file within the repository.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"name": "WriteFile",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"file_path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Path where the new file will be created.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"content": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Content to write into the new file.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"overwrite": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"default": false,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Completely replace any existing content at the path",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "boolean"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Write a new file that either doesn't exist or overwrites an existing file."&lt;br&gt;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"name": "CreateDirectory",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"directory_path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Path to the new directory within the repository.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"name": "AddToFile",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"file_path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Path to the file to add content to.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"content": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Content to add to the file.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"insert_at_line": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"anyOf": [&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "integer"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "null"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;],&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"default": null,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Line number to insert the content at. If not provided, appends to the end."&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"name": "DeleteFile",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"file_path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Path to the file to delete.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"name": "MoveFile",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"source_path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Current path of the file.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"destination_path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "New path for the file.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"copy_file": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"default": false,&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Set to True to copy the file instead of moving it.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "boolean"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;},&lt;br&gt;&amp;nbsp;&amp;nbsp;{&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"name": "CheckFileExistence",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"file_path": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"description": "Path to the file to check within the repository.",&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"type": "string"&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;]&lt;br&gt;&amp;lt;/available_tools&amp;gt;&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;You are an AI agent, acting as a system administrator and software expert to perform file maintenance and a variety of file editing tasks. You have access to tools for interacting with the file system, and your goal is to execute my requests accurately.&lt;br&gt;&lt;br&gt;Your objective is to:&lt;br&gt;1. Understand the commands and context of the task assigned to you.&lt;br&gt;2. Read and analyze specific files when needed.&lt;br&gt;3. Use available tools to edit, delete, move, rename, or create files as requested.&lt;br&gt;4. Make logical decisions during tasks to ensure correctness and maintain system integrity.&lt;br&gt;5. Communicate any changes or outcomes of your actions succinctly.&lt;br&gt;&lt;br&gt;# Guidelines&lt;br&gt;- **Interact Intelligently**: Break down complex tasks into smaller steps. Explain your reasoning clearly before deciding on actions, especially if there are potential multiple approaches.&lt;br&gt;- **Be Mindful of Context**: Consider the impact of making system or file changes. Avoid conflicts, double-check the context given, and make decisions that will protect data integrity.&lt;br&gt;- **Edge Cases**: Describe any edge cases you identify during the tasks and provide options for resolution when necessary.&lt;br&gt;- **Ask When Uncertain**: If there are crucial details missing or a decision has multiple possibilities, ask specific follow-up questions to clarify.&lt;br&gt;&lt;br&gt;# Steps&lt;br&gt;1. **Understand the File Maintenance/Editing Task**: Before taking action, ensure you understand clearly what is being asked—whether it is organizing, modifying, combining, renaming, or other tasks.&lt;br&gt;2. **Access the File(s)**: Extract relevant information from the file system. When accessing a file, note any particular concerns such as file permissions or dependencies.&lt;br&gt;3. **Reason Out Steps Before Action**: For each task, break it into sub-steps and outline the reasoning behind these steps:&lt;br&gt;&amp;nbsp;&amp;nbsp; - Consider dependencies or any related files.&lt;br&gt;&amp;nbsp;&amp;nbsp; - Ensure no unintended consequences (such as accidental data loss).&lt;br&gt;4. **Perform Actions**: Use the tools you have to execute the necessary changes.&lt;br&gt;5. **Report Back**: After completing the task, summarize the actions taken and the final output.&lt;br&gt;&lt;br&gt;# Notes&lt;br&gt;- In cases where conflicting instructions or unclear information are provided, include your assumptions in the reasoning and summarize what you are doing to mitigate conflicts.&lt;br&gt;- Ensure your summaries and justifications are clear to facilitate review or approval for critical changes.&lt;br&gt;&amp;lt;important&amp;gt;&lt;br&gt;Never echo the contents of files back to the users in whole or large part -- answer specific questions as asked.&lt;br&gt;&amp;lt;/important&amp;gt;&lt;br&gt;&lt;br&gt;---&lt;br&gt;&lt;br&gt;To begin, simply use the `BeginChatOperation` tool with the startup phrase "OrangeCreamsicle" to enable your tools and indicate you are ready to process user messages.&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="message assistant"&gt;
        &lt;div class="role"&gt;ASSISTANT&lt;/div&gt;
        &lt;div class="content"&gt;I am ready for user messages.&lt;br&gt;&amp;lt;tool&amp;gt;&lt;br&gt;{&lt;br&gt;&amp;nbsp;&amp;nbsp;"name": "BeginChatOperation",&lt;br&gt;&amp;nbsp;&amp;nbsp;"reason": "Performing startup task"&lt;br&gt;&amp;nbsp;&amp;nbsp;"parameters": {&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;"startup_phrase": "OrangeCreamsicle"&lt;br&gt;&amp;nbsp;&amp;nbsp;}&lt;br&gt;}&lt;br&gt;&amp;lt;/tool&amp;gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="message user"&gt;
        &lt;div class="role"&gt;USER&lt;/div&gt;
        &lt;div class="content"&gt;&amp;lt;message_from_user&amp;gt;&lt;br&gt;How would you accomplish the following using your given tools; for now just make a plan and tell me, do not take any action.&lt;br&gt;Please keep your response concise, as it will be shown to me in a terminal console with limited display size.&lt;br&gt;&lt;br&gt;&amp;lt;task&amp;gt;&lt;br&gt;examine this repo and then write a readme for this repo&lt;br&gt;&amp;lt;/task&amp;gt;&lt;br&gt;&amp;lt;/message_from_user&amp;gt;&lt;br&gt;&amp;lt;system_context&amp;gt;This section provides data injected automatically by the system at runtime.&lt;br&gt;{&lt;br&gt;&amp;nbsp;&amp;nbsp;"current_local_time": "Tuesday, Feb 25 2025 10:07 AM",&lt;br&gt;&amp;nbsp;&amp;nbsp;"user_preference_notes": []&lt;br&gt;}&lt;br&gt;&amp;lt;/system_context&amp;gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="message assistant"&gt;
        &lt;div class="role"&gt;ASSISTANT (RESPONSE)&lt;/div&gt;
        &lt;div class="content"&gt;I'll outline a concise plan to create a README for this repository:&lt;br&gt;&lt;br&gt;1. First Phase - Information Gathering:&lt;br&gt;&amp;nbsp;&amp;nbsp; - Use ListFiles (recursive) to get full repository structure&lt;br&gt;&amp;nbsp;&amp;nbsp; - Use ReadFile on key files to understand the repository's purpose&lt;br&gt;&amp;nbsp;&amp;nbsp; - Look for existing documentation or config files&lt;br&gt;&lt;br&gt;2. Second Phase - Analysis:&lt;br&gt;&amp;nbsp;&amp;nbsp; - Identify main components and structure&lt;br&gt;&amp;nbsp;&amp;nbsp; - Determine the project's purpose from code/files&lt;br&gt;&amp;nbsp;&amp;nbsp; - Note any setup requirements or dependencies&lt;br&gt;&lt;br&gt;3. Final Phase - README Creation:&lt;br&gt;&amp;nbsp;&amp;nbsp; - Write a new README.md with standard sections:&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Project Overview&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Directory Structure&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Setup/Installation&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Usage&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Tools/Dependencies&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Any other relevant sections based on findings&lt;br&gt;&lt;br&gt;Would you like me to proceed with this plan?&lt;/div&gt;
    &lt;/div&gt;
    &lt;div&gt;
        &lt;div class="metadata"&gt;
            &lt;div&gt;Input Tokens: 1887 | Output Tokens: 175&lt;/div&gt;
            &lt;div&gt;LLM: Claude 3.5 Sonnet V2&lt;/div&gt;
            &lt;div&gt;Generated At: 2025-02-25T18:07:27.735802Z&lt;/div&gt;
            &lt;div&gt;Completion Time: 4.87s&lt;/div&gt;
            &lt;div&gt;Completion Cost: $0.0083&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

&lt;/div&gt;</content><category term="Snippets"/><category term="EditGuru"/></entry><entry><title>Streamlit Audix Component</title><link href="https://msull.github.io/streamlit-audix-component.html" rel="alternate"/><published>2025-02-03T09:23:00-08:00</published><updated>2025-02-03T09:23:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2025-02-03:/streamlit-audix-component.html</id><content type="html">&lt;p&gt;Came across this nice looking audio component:&lt;/p&gt;
&lt;p&gt;&lt;img alt="img" src="https://github.com/keli-wen/streamlit-advanced-audio/raw/master/assets/demo.gif"&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;https://github.com/keli-wen/streamlit-advanced-audio&lt;/li&gt;
&lt;li&gt;https://advanced-audio-example.streamlit.app/&lt;/li&gt;
&lt;/ul&gt;</content><category term="snippets"/><category term="streamlit"/></entry><entry><title>Python List Comprehensions Reference</title><link href="https://msull.github.io/python-list-comprehensions-reference.html" rel="alternate"/><published>2025-01-16T12:00:00-08:00</published><updated>2025-01-16T12:00:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2025-01-16:/python-list-comprehensions-reference.html</id><summary type="html">&lt;h2&gt;Python List Comprehensions Reference&lt;/h2&gt;
&lt;p&gt;List comprehensions provide a concise way to create lists in Python. Here are some practical examples:&lt;/p&gt;
&lt;h3&gt;1. Basic List Comprehension&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create a list of squares&lt;/span&gt;
&lt;span class="n"&gt;squares&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squares&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]&lt;/span&gt;

&lt;span class="c1"&gt;# Convert …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h2&gt;Python List Comprehensions Reference&lt;/h2&gt;
&lt;p&gt;List comprehensions provide a concise way to create lists in Python. Here are some practical examples:&lt;/p&gt;
&lt;h3&gt;1. Basic List Comprehension&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create a list of squares&lt;/span&gt;
&lt;span class="n"&gt;squares&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;squares&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# [0, 1, 4, 9, 16, 25, 36, 49, 64, 81]&lt;/span&gt;

&lt;span class="c1"&gt;# Convert temperatures (Celsius to Fahrenheit)&lt;/span&gt;
&lt;span class="n"&gt;celsius&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;30&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;40&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;fahrenheit&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[(&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;celsius&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;fahrenheit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# [32.0, 50.0, 68.0, 86.0, 104.0]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;2. Filtering with Comprehensions&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Get even numbers from a list&lt;/span&gt;
&lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;even_numbers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;numbers&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="o"&gt;%&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;even_numbers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# [2, 4, 6, 8, 10]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;3. Nested List Comprehension&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create a matrix&lt;/span&gt;
&lt;span class="n"&gt;matrix&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;j&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;matrix&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# [[0, 1, 2], [0, 1, 2], [0, 1, 2]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;4. String Manipulation&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Convert words to uppercase&lt;/span&gt;
&lt;span class="n"&gt;words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;world&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;python&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;uppercase_words&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;word&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;upper&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;word&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;words&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uppercase_words&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;  &lt;span class="c1"&gt;# [&amp;#39;HELLO&amp;#39;, &amp;#39;WORLD&amp;#39;, &amp;#39;PYTHON&amp;#39;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Key Takeaways&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;List comprehensions offer a compact syntax for list creation&lt;/li&gt;
&lt;li&gt;They can include filtering conditions&lt;/li&gt;
&lt;li&gt;They can transform elements during creation&lt;/li&gt;
&lt;li&gt;They can be nested for more complex operations&lt;/li&gt;
&lt;/ul&gt;</content><category term="snippets"/><category term="python"/><category term="guides"/></entry><entry><title>Streamlit Paste Button</title><link href="https://msull.github.io/streamlit-paste-button.html" rel="alternate"/><published>2025-01-06T15:04:00-08:00</published><updated>2025-01-06T15:04:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2025-01-06:/streamlit-paste-button.html</id><content type="html">&lt;p&gt;I was looking for a way to paste images directly into a Streamlit app and came across the "Streamlit Paste Button"
component:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/olucaslopes/streamlit-paste-button/"&gt;Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://paste-button.streamlit.app/"&gt;Demo Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This component proved easy to work with, and I was able to incorporate it into my app exactly as hoped.&lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="https://msull.github.io/paste-button-example.png"&gt;&lt;/p&gt;</content><category term="snippets"/><category term="streamlit"/></entry><entry><title>Adding a Sync Version to Async Functions</title><link href="https://msull.github.io/adding-a-sync-version-to-async-functions.html" rel="alternate"/><published>2024-11-19T21:39:00-08:00</published><updated>2024-11-19T21:39:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2024-11-19:/adding-a-sync-version-to-async-functions.html</id><summary type="html">&lt;p&gt;Sometimes you need to call an async function synchronously. This &lt;code&gt;add_sync_version&lt;/code&gt; decorator makes it straightforward
by adding a &lt;code&gt;.sync&lt;/code&gt; attribute to your async function. The &lt;code&gt;.sync&lt;/code&gt; version
uses &lt;code&gt;asyncio.new_event_loop().run_until_complete&lt;/code&gt; to run the async code in a blocking way. Just decorate your function
with &lt;code&gt;@add_sync_version&lt;/code&gt;, and you can call …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes you need to call an async function synchronously. This &lt;code&gt;add_sync_version&lt;/code&gt; decorator makes it straightforward
by adding a &lt;code&gt;.sync&lt;/code&gt; attribute to your async function. The &lt;code&gt;.sync&lt;/code&gt; version
uses &lt;code&gt;asyncio.new_event_loop().run_until_complete&lt;/code&gt; to run the async code in a blocking way. Just decorate your function
with &lt;code&gt;@add_sync_version&lt;/code&gt;, and you can call &lt;code&gt;func.sync(*args, **kwargs)&lt;/code&gt; when sync access is needed. Inspired by
Guido's &lt;a href="https://discuss.python.org/t/how-can-async-support-dispatch-between-sync-and-async-variants-of-the-same-code/15014/7"&gt;comment here&lt;/a&gt;
, it’s a simple way to handle mixed async and sync requirements.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;asyncio&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;functools&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;add_sync_version&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Decorator that adds a `.sync` attribute to an async function, allowing it &lt;/span&gt;
&lt;span class="sd"&gt;    to be called synchronously. The synchronous version uses a new event loop &lt;/span&gt;
&lt;span class="sd"&gt;    to run the async function.&lt;/span&gt;

&lt;span class="sd"&gt;    Example:&lt;/span&gt;
&lt;span class="sd"&gt;        @add_sync_version&lt;/span&gt;
&lt;span class="sd"&gt;        async def spam():&lt;/span&gt;
&lt;span class="sd"&gt;            return &amp;quot;Hello, async world!&amp;quot;&lt;/span&gt;

&lt;span class="sd"&gt;        # Async usage:&lt;/span&gt;
&lt;span class="sd"&gt;        result = await spam()&lt;/span&gt;

&lt;span class="sd"&gt;        # Synchronous usage:&lt;/span&gt;
&lt;span class="sd"&gt;        result = spam.sync()&lt;/span&gt;

&lt;span class="sd"&gt;    Args:&lt;/span&gt;
&lt;span class="sd"&gt;        func (coroutine): The async function to wrap.&lt;/span&gt;

&lt;span class="sd"&gt;    Returns:&lt;/span&gt;
&lt;span class="sd"&gt;        coroutine: The original async function with an added `.sync` attribute.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;assert&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iscoroutinefunction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nd"&gt;@functools&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wraps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;wrapper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;asyncio&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;new_event_loop&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run_until_complete&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

    &lt;span class="n"&gt;func&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sync&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;wrapper&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;func&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="snippets"/><category term="python"/><category term="async"/><category term="decorator"/><category term="Guido"/></entry><entry><title>Streamlit Scroll Navigation</title><link href="https://msull.github.io/streamlit-scroll-navigation.html" rel="alternate"/><published>2024-11-18T09:00:00-08:00</published><updated>2024-11-18T09:00:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2024-11-18:/streamlit-scroll-navigation.html</id><content type="html">&lt;p&gt;Nice Streamlit component for scrolling / tracking position on a page&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/snpm/streamlit-scroll-navigation/"&gt;Github&lt;/a&gt;&lt;/p&gt;</content><category term="snippets"/><category term="streamlit"/></entry><entry><title>1password CLI Examples</title><link href="https://msull.github.io/1password-cli-examples.html" rel="alternate"/><published>2024-11-15T12:00:00-08:00</published><updated>2024-11-15T12:00:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2024-11-15:/1password-cli-examples.html</id><summary type="html">&lt;p&gt;Snippets for using the 1password CLI tool; learned about this tool today while reading
a &lt;a href="https://simonwillison.net/2024/Nov/15/recraft-v3/#atom-everything"&gt;blog post&lt;/a&gt; by Simon Willison -- very handy tool.&lt;/p&gt;
&lt;p&gt;Remainder of this post written by Claude 3.5 Sonnet V2 as a quick reference.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Get API token from 1Password and use in API call&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;API_TOKEN …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Snippets for using the 1password CLI tool; learned about this tool today while reading
a &lt;a href="https://simonwillison.net/2024/Nov/15/recraft-v3/#atom-everything"&gt;blog post&lt;/a&gt; by Simon Willison -- very handy tool.&lt;/p&gt;
&lt;p&gt;Remainder of this post written by Claude 3.5 Sonnet V2 as a quick reference.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Get API token from 1Password and use in API call&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;API_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;get&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Service API Key&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--fields&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--format&lt;span class="w"&gt; &lt;/span&gt;json&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;jq&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;.value&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;

curl&lt;span class="w"&gt; &lt;/span&gt;https://api.example.com/v1/endpoint&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
-H&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
-H&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authorization: Bearer &lt;/span&gt;&lt;span class="nv"&gt;$API_TOKEN&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
-d&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;{&lt;/span&gt;
&lt;span class="s1"&gt;&amp;quot;param1&amp;quot;: &amp;quot;value1&amp;quot;,&lt;/span&gt;
&lt;span class="s1"&gt;&amp;quot;param2&amp;quot;: &amp;quot;value2&amp;quot;&lt;/span&gt;
&lt;span class="s1"&gt;}&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# View all items in a vault&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;--vault&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Personal&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Get a password (outputs only the password value)&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;get&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MyLogin&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--fields&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Get a password in raw format (useful for scripts)&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;get&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MyLogin&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--fields&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password&lt;span class="w"&gt; &lt;/span&gt;--format&lt;span class="w"&gt; &lt;/span&gt;json&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;jq&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;.value
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create a new login item&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;--category&lt;span class="w"&gt; &lt;/span&gt;login&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--title&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;New Service&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--vault&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Personal&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nv"&gt;username&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;user@example.com&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mysecret123&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="nv"&gt;url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://example.com&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Generate and store a new password&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;--category&lt;span class="w"&gt; &lt;/span&gt;password&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--title&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Generated Password&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--generate-password
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Get all fields for an item&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;get&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;MyLogin&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Create a secure note&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;--category&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Secure Note&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--title&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Project Notes&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
--vault&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Work&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;notesPlain[text]=&amp;quot;Important project details...&amp;quot;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Use secrets in environment variables&lt;/span&gt;
&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;op&lt;span class="w"&gt; &lt;/span&gt;signin&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;DB_PASSWORD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;get&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Database&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--fields&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;password&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;export&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;API_KEY&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;get&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;API Keys&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--fields&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;key&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Read SSH keys or certificates&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;get&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;SSH Key&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--fields&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;label&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;private_key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# List all vaults&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;vault&lt;span class="w"&gt; &lt;/span&gt;list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Search for items&lt;/span&gt;
op&lt;span class="w"&gt; &lt;/span&gt;item&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt; &lt;/span&gt;--query&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;database&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here's the revised version of your update, with improved grammar, flow, and formatting:&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Update on 2025-01-08&lt;/h2&gt;
&lt;p&gt;Recently, I integrated the CLI usage of the &lt;code&gt;op&lt;/code&gt; tool into a Python Streamlit app that I run locally on my MacBook. This integration allows me to securely manage Google credentials and an OAuth token, enabling programmatic access to my Google Calendars. Here's how I achieved it:&lt;/p&gt;
&lt;h3&gt;Python Code Example&lt;/h3&gt;
&lt;p&gt;The following code snippet demonstrates how I retrieve credentials and tokens from 1Password, use them to initialize a calendar access class, and then update the token back to 1Password if it changes:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;tempfile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;subprocess&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;json&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;supersullytools.gcalendar_access&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;GoogleCalendarDataAccess&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_calendar_access&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;    Fetches Google OAuth credentials from 1Password, writes them to temporary files,&lt;/span&gt;
&lt;span class="sd"&gt;    initializes GoogleCalendarDataAccess, and updates the token back to 1Password if needed.&lt;/span&gt;
&lt;span class="sd"&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;op_get_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Uses the 1Password CLI (`op`) to retrieve the raw JSON content of a specified field.&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;op&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;get&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;item_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;--fields&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;--format&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="s2"&gt;&amp;quot;json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="n"&gt;result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;capture_output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;loads&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;result&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;stdout&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;value&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;  &lt;span class="c1"&gt;# Returns the field&amp;#39;s raw JSON content&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;op_set_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;new_value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="sd"&gt;        Updates the content of a specific field in a 1Password item using the `op` CLI.&lt;/span&gt;
&lt;span class="sd"&gt;        Returns True if successful, otherwise False.&lt;/span&gt;
&lt;span class="sd"&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
        &lt;span class="n"&gt;cmd&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;op&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;item&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;edit&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;item_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;field_name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;=&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;new_value&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
        &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cmd&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;capture_output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;check&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
        &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;CalledProcessError&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Error updating 1Password field: &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;

    &lt;span class="c1"&gt;# Retrieve the credentials and token JSON from 1Password&lt;/span&gt;
    &lt;span class="n"&gt;creds_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;op_get_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ONEPASS_GOOGLE_CREDS_ITEM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# Adjust item name/ID as needed&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;notesPlain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# json str stored in a Secure Note&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="n"&gt;token_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;op_get_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ONEPASS_GOOGLE_TOKEN_ITEM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# Adjust item name/ID as needed&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;notesPlain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# json str stored in a Secure Note&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="c1"&gt;# Write the credentials and token to temporary files&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;w+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tmp_file1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;NamedTemporaryFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;mode&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;w+&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;tmp_file2&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;tmp_file1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;creds_json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;tmp_file1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;tmp_file1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;temp_credentials_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tmp_file1&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;

        &lt;span class="n"&gt;tmp_file2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;write&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;token_json&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;tmp_file2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;flush&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;tmp_file2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;temp_token_path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tmp_file2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;

        &lt;span class="c1"&gt;# Initialize the GoogleCalendarDataAccess class&lt;/span&gt;
        &lt;span class="n"&gt;calendar&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;GoogleCalendarDataAccess&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
            &lt;span class="n"&gt;credentials_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;temp_credentials_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;token_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;temp_token_path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="n"&gt;default_calendar_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;EVENT_CALENDAR_ID&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
            &lt;span class="n"&gt;fallback_timezone&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;America/Los_Angeles&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="c1"&gt;# Check if the token was updated and save it back to 1Password if necessary&lt;/span&gt;
        &lt;span class="n"&gt;tmp_file2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;seek&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;updated_token_json&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tmp_file2&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;updated_token_json&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="n"&gt;token_json&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;op_set_field&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;environ&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ONEPASS_GOOGLE_TOKEN_ITEM&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;  &lt;span class="c1"&gt;# Adjust item name/ID as needed&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;notesPlain&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;  &lt;span class="c1"&gt;# json str stored in a Secure Note&lt;/span&gt;
                &lt;span class="n"&gt;updated_token_json&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;calendar&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A really cool benefit of this is that it automatically integrates into the 1password Biometrics / fingerprint scanner on my Macbook when it needs to regain access to the protected items&lt;/p&gt;
&lt;p&gt;&lt;img alt="1passbio.png" src="https://msull.github.io/1passbio.png"&gt;&lt;/p&gt;</content><category term="snippets"/><category term="1password"/></entry><entry><title>Streamlit Sortables</title><link href="https://msull.github.io/streamlit-sortables.html" rel="alternate"/><published>2024-11-14T15:05:00-08:00</published><updated>2024-11-14T15:05:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2024-11-14:/streamlit-sortables.html</id><content type="html">&lt;p&gt;Another interesting streamlit component, letting you sort / hide items in a list with a nice UI.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/ohtaman/streamlit-sortables"&gt;Github&lt;/a&gt;&lt;/p&gt;</content><category term="snippets"/><category term="streamlit"/></entry><entry><title>First blog post</title><link href="https://msull.github.io/first-blog-post.html" rel="alternate"/><published>2024-11-14T14:45:00-08:00</published><updated>2024-11-14T14:45:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2024-11-14:/first-blog-post.html</id><content type="html">&lt;p&gt;Hello Blog&lt;/p&gt;</content><category term="Blog"/></entry><entry><title>Streamlit Image Cropper</title><link href="https://msull.github.io/streamlit-image-cropper.html" rel="alternate"/><published>2024-11-14T12:00:00-08:00</published><updated>2024-11-14T12:00:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2024-11-14:/streamlit-image-cropper.html</id><content type="html">&lt;p&gt;Interesting Streamlit component I came across; could be useful next time I try to build software to automate the Dinghy
score results.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/turner-anderson/streamlit-cropper"&gt;Github&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;A streamlit custom component for easy image cropping&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="img" src="https://github.com/turner-anderson/streamlit-cropper/raw/master/demo.gif"&gt;&lt;/p&gt;</content><category term="snippets"/><category term="streamlit"/></entry><entry><title>Basic post examples</title><link href="https://msull.github.io/basic-post-examples.html" rel="alternate"/><published>2024-11-14T00:00:00-08:00</published><updated>2024-11-14T00:00:00-08:00</updated><author><name>Sully</name></author><id>tag:msull.github.io,2024-11-14:/basic-post-examples.html</id><content type="html">&lt;p&gt;Learning how to use Pelican. This is an example / reference page for linking and formatting.&lt;/p&gt;
&lt;p&gt;See below intra-site link examples in Markdown format.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://msull.github.io/streamlit-image-cropper.html"&gt;a link relative to the current file&lt;/a&gt;
&lt;a href="https://msull.github.io/streamlit-image-cropper.html"&gt;a link relative to the content root&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Icon" src="https://msull.github.io/example-attached-image/icon.png"&gt;&lt;/p&gt;</content><category term="snippets"/><category term="pelican"/><category term="markdown"/></entry><entry><title>More examples</title><link href="https://msull.github.io/more-examples.html" rel="alternate"/><published>2024-11-14T00:00:00-08:00</published><updated>2024-11-14T00:00:00-08:00</updated><author><name>ChatGPT 4o</name></author><id>tag:msull.github.io,2024-11-14:/more-examples.html</id><summary type="html">&lt;p&gt;A quick overview of markdown formatting in Pelican.&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Example Markdown for Pelican Blog&lt;/h1&gt;
&lt;p&gt;Welcome to this example markdown file! If you're setting up a Pelican blog, it's helpful to understand how various formatting options will render in your new blog post. Here's a showcase of all the essential elements you can use with Pelican, including some Pelican-specific features.&lt;/p&gt;
&lt;h2&gt;Headings&lt;/h2&gt;
&lt;p&gt;You can use different levels of headings to structure your content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="gh"&gt;# Heading 1&lt;/span&gt;
&lt;span class="gu"&gt;## Heading 2&lt;/span&gt;
&lt;span class="gu"&gt;### Heading 3&lt;/span&gt;
&lt;span class="gu"&gt;#### Heading 4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Examples&lt;/h3&gt;
&lt;h1&gt;Heading 1&lt;/h1&gt;
&lt;h2&gt;Heading 2&lt;/h2&gt;
&lt;h3&gt;Heading 3&lt;/h3&gt;
&lt;h4&gt;Heading 4&lt;/h4&gt;
&lt;hr&gt;
&lt;h2&gt;Text Formatting&lt;/h2&gt;
&lt;p&gt;Make your text stand out using basic Markdown formatting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Bold text&lt;/strong&gt;: &lt;code&gt;**Bold**&lt;/code&gt; → &lt;strong&gt;Bold&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Italic text&lt;/em&gt;: &lt;code&gt;*Italic*&lt;/code&gt; → &lt;em&gt;Italic&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;~~Strikethrough~~: &lt;code&gt;~~Strikethrough~~&lt;/code&gt; → ~~Strikethrough~~&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Inline code&lt;/code&gt;: Use backticks (&lt;code&gt;) for inline code:&lt;/code&gt;print("Hello, Pelican!")`&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Blockquotes&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;You can create blockquotes to emphasize important points.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Use &lt;code&gt;&amp;gt;&lt;/code&gt; followed by the text to create a blockquote, for example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;&amp;gt; &lt;/span&gt;&lt;span class="ge"&gt;This is a blockquote.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Lists&lt;/h2&gt;
&lt;h3&gt;Unordered List&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Item 1&lt;/li&gt;
&lt;li&gt;Item 2&lt;/li&gt;
&lt;li&gt;Sub-item 2.1&lt;/li&gt;
&lt;li&gt;Sub-item 2.2&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Ordered List&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;First item&lt;/li&gt;
&lt;li&gt;Second item&lt;/li&gt;
&lt;li&gt;Sub-item 2.1&lt;/li&gt;
&lt;li&gt;Sub-item 2.2&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Links&lt;/h2&gt;
&lt;p&gt;Include links using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[&lt;span class="nt"&gt;OpenAI&lt;/span&gt;](&lt;span class="na"&gt;https://www.openai.com&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href="https://www.openai.com"&gt;OpenAI&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Images&lt;/h2&gt;
&lt;p&gt;Add images to your posts using:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;![&lt;span class="nt"&gt;Alt text&lt;/span&gt;](&lt;span class="na"&gt;https://example.com/image.jpg&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="Pelican Logo" src="https://docs.getpelican.com/en/latest/_static/pelican-logo.svg"&gt;&lt;/p&gt;
&lt;h2&gt;Code Blocks&lt;/h2&gt;
&lt;p&gt;You can add code blocks using triple backticks or indentation:&lt;/p&gt;
&lt;pre&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example Python code&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello, Pelican!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;/pre&gt;

&lt;h3&gt;Output&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Example Python code&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="nb"&gt;range&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hello, Pelican!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Horizontal Rules&lt;/h2&gt;
&lt;p&gt;Create horizontal rules to separate sections:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;---
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h2&gt;Tables&lt;/h2&gt;
&lt;p&gt;Use tables to present data:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;| Header 1  | Header 2  |
| --------- | --------- |
| Row 1 Col 1 | Row 1 Col 2 |
| Row 2 Col 1 | Row 2 Col 2 |
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Header 1&lt;/th&gt;
&lt;th&gt;Header 2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Row 1 Col 1&lt;/td&gt;
&lt;td&gt;Row 1 Col 2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Row 2 Col 1&lt;/td&gt;
&lt;td&gt;Row 2 Col 2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Pelican-Specific Features&lt;/h2&gt;
&lt;h3&gt;Metadata&lt;/h3&gt;
&lt;p&gt;In Pelican, metadata is added to the top of the markdown file for each post:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Title: Example Post
Date: 2024-11-14
Category: Markdown Tutorial
Tags: pelican, markdown, tutorial
Slug: example-post
Author: Your Name
Summary: A quick overview of markdown formatting in Pelican.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;Pelican Plugins&lt;/h3&gt;
&lt;p&gt;You can use various plugins to enhance your Pelican posts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Tipue Search&lt;/strong&gt;: Add search functionality to your site.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Neighbors&lt;/strong&gt;: Easily link to previous/next articles within the template.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Summary&lt;/strong&gt;: Control the summary of your posts that are displayed on the main page by adding the &lt;code&gt;&amp;lt;!-- PELICAN_END_SUMMARY --&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Inserting Summary Split&lt;/h3&gt;
&lt;p&gt;Control how much of your article shows up in a summary view by using the Pelican-specific tag:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;This is the beginning of the article, and it will appear in the summary.

&amp;lt;!-- PELICAN_END_SUMMARY --&amp;gt;

This part appears only in the full article.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2&gt;Embedding Media&lt;/h2&gt;
&lt;h3&gt;YouTube Videos&lt;/h3&gt;
&lt;p&gt;Embed a YouTube video in Pelican using an HTML snippet:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt; &lt;span class="na"&gt;width&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;560&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;height&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;315&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://www.youtube.com/embed/dQw4w9WgXcQ&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;frameborder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;allowfullscreen&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;iframe&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;iframe width="560" height="315" src="https://www.youtube.com/embed/dQw4w9WgXcQ" frameborder="0" allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2&gt;Footnotes&lt;/h2&gt;
&lt;p&gt;Add footnotes to provide additional information without cluttering the text:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;This is a statement with a footnote.[^1]

[&lt;span class="nl"&gt;^1&lt;/span&gt;]: &lt;span class="na"&gt;This is the footnote text.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This is a statement with a footnote.&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;h2&gt;Math Equations&lt;/h2&gt;
&lt;p&gt;Pelican also allows you to include LaTeX-style math expressions if you enable math rendering:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$$
e^{i \pi} + 1 = 0
$$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;$$
e^{i \pi} + 1 = 0
$$&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This example covers the main formatting features you can use in Pelican for writing blog posts. You can mix and match these elements to create rich and engaging content for your readers. Feel free to experiment with different markdown and Pelican-specific options to see what best fits your style!&lt;/p&gt;
&lt;p&gt;Happy blogging with Pelican!&lt;/p&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;This is the footnote text.&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="snippets"/><category term="pelican"/><category term="markdown"/><category term="tutorial"/></entry></feed>